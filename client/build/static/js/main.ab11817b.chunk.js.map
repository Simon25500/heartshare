{"version":3,"sources":["assets/images/logo_home.svg","serviceWorker.js","components/home.jsx","actions/index.js","containers/profile-menu.jsx","containers/profile.jsx","containers/header.jsx","containers/nav-choice.jsx","components/navbar.jsx","components/marker.jsx","containers/map.jsx","containers/event.jsx","containers/card.jsx","containers/card-list.jsx","components/body.jsx","components/home-page.jsx","containers/form-inscription.jsx","containers/form-connect.jsx","reducers/user.js","reducers/card.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","src","logo_home","alt","height","width","aria-label","role","Component","isLog","type","payload","fetch","method","headers","localStorage","getItem","then","response","json","cardSet","reponse","catch","err","cardActive","card","ProfileMenu","this","props","user","userId","to","console","log","connect","state","dispatch","bindActionCreators","Profile","handleClick","active","setState","onClick","style","backgroundImage","FA","require","Header","id","placeholder","name","NavChoice","NavBar","Marker","backgroundColor","color","cursor","title","Map","Array","isArray","cards","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","map","_id","lat","lng","defaultProps","Event","Card","img","start","Date","toLocaleDateString","weekday","year","month","day","starttimes","toLocaleTimeString","hour","minute","stop","city","place","CardList","association","img_url","locationCity","Body","HomePage","FormInscription","onSubmit","values","inscription","post","history","push","handleSubmit","htmlFor","Field","label","component","disabled","pristine","submitting","reduxForm","form","body","callback","JSON","stringify","data","setItem","token","FormConnect","connexion","href","userReducer","action","cardReducer","reducers","combineReducers","formReducer","middleware","applyMiddleware","reduxPromise","logger","ReactDOM","render","store","createStore","path","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ab11817b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_home.ffb43085.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className='home h-screen' >\n                <div>\n                    <img className=\"mx-auto pt-40\" src={logo_home} alt=\"logo HeartShare\" height='400' width='400'/>\n                    <div>\n                        <h2 className='text-2xl text-center mt-20 font-bold'>See you soon <span aria-label=\"emoji-heart\" role=\"img\">😍</span></h2>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","export function inscription(body, callback) {\n    fetch(`/api/auth/signup`, {\n        method:'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n        }).then(response => response.json())\n        .then(data => {localStorage.setItem('token', data.token)})\n        .then(callback);\n\n        \n    return {\n    type: 'USER_SET', // Not used by reducer (we navigate)\n    payload: localStorage.getItem('token')\n    };\n}\n\nexport function connexion(body, callback) {\n    fetch(`/api/auth/login`, {\n        method:'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n        }).then(response => response.json())\n        .then(data => {localStorage.setItem('token', data.token)})\n        .then(callback);\n\n    return {\n    type: 'USER_SET', // Not used by reducer (we navigate)\n    payload: localStorage.getItem('token')\n    };\n}\n\nexport const isLog =  () => {\n    let request = fetch(`/api/auth/islog`, {\n        method:'GET',\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`}\n        }).then(response => response.json());\n\n        \n        return {\n            type: 'USER_SET', // Not used by reducer (we navigate)\n            payload: request\n            };\n}\n\nexport const cardSet = () => {\n    const request = fetch('/api/event/index', {\n        method: 'GET',\n        headers: {\"Content-Type\": \"application/json\"}\n    }).then(reponse => reponse.json())\n    .catch(err => err.json())\n\n    return {\n        type: 'CARD_SET',\n        payload: request\n    };\n}\n\nexport const cardActive = (card) => {\n    return {\n        type: 'CARD_SET',\n        payload: card\n    };\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { isLog } from \"../actions\";\n\n\nclass ProfileMenu extends Component {\n\n    componentWillMount() {\n        this.props.isLog()\n    }\n\n\n    render() {\n        if (this.props.user === null || this.props.user.userId === null){\n        return (\n            <div className=\"profilemenu absolute bg-gray-400\">\n                <Link to=\"/connexion\">\n                    <div className=\"p-5 border\">\n                        <p className=\"block profile text-center\">Connexion</p>\n                    </div>\n                </Link>\n                <Link to=\"/inscription\">\n                    <div className=\"p-5 border\">\n                        <p className=\"block profile text-center\" >Inscription</p>\n                    </div>\n                </Link>\n            </div>\n        );\n        } else {\n            console.log(this.props.user)\n            return(\n                <div> coucou</div>\n            );\n        }\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {isLog: isLog},\n        dispatch\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfileMenu);","import React, { Component } from 'react';\nimport ProfileMenu from './profile-menu';\n\n\nclass Profile extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            active: false\n        }\n    }\n    \n    handleClick = () => {\n        if (this.state.active === false){\n            this.setState({active: true})\n        } else {\n            this.setState({active: false})            \n        }\n    }\n\n    render(){\n        const style = {backgroundImage: `url(https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png)`}\n        return(\n            <div className=\"relative\">\n                <div onClick={this.handleClick} className=\"profile h-16 w-16 bg-gray-400 rounded-full bg-cover bg-bottom \" style={style}></div>\n                {this.state.active === true ? <ProfileMenu /> : \"\"}\n            </div>\n        );\n    }\n}\n\n\nexport default Profile;","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\nimport Profile from './profile'\nvar FA = require('react-fontawesome')\n\n\nclass Header extends Component {\n    render(){\n        return(\n            <div className=\"py-5 px-10 flex justify-between items-center\">\n                <img src={logo_home} alt=\"logo HeartShare\" height='150' width='150'/>\n                <form className='relative w-1/2 lg: w-1/3'>\n                    <input className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Search\" />\n                    <FA name=\"search\" className='search text-2xl text-gray-400 absolute'/>\n                </form>\n                <Profile />\n            </div>\n        );\n    }\n}\n\n\nexport default Header;","import React, { Component } from 'react';\n\nclass NavChoice extends Component {\n\n    render(){\n        return(\n            <div className=\"choice py-2 w-1/4 bg-gray-300 rounded-md text-center\">\n                <p className=\"font-bold\">{this.props.name}</p>\n            </div>\n        );\n    }\n\n}\n\nexport default NavChoice;","import React, { Component } from 'react';\nimport NavChoice from '../containers/nav-choice';\n\nclass NavBar extends Component {\n\n    render(){\n        return(\n            <div className=\"flex justify-between mx-8 \">\n                <NavChoice name=\"Près de chez vous\"/>\n                <NavChoice name=\"Category\"/>\n                <NavChoice name=\"Toute les associations\"/>\n            </div>\n        );\n    }\n\n}\n\nexport default NavBar;","\nimport React,{ Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { cardActive } from '../actions'\nimport '../assets/stylesheets/marker.css';\n\nclass Marker extends Component {\n\n    onClick = () => {\n        this.props.cardActive(this.props.card)\n    }\n\n    render(){\n        return (\n        <div>\n            <div\n            onClick={this.onClick}\n            className=\"pin bounce\"\n            style={{ backgroundColor: this.props.color, cursor: 'pointer' }}\n            title={this.props.name}\n            />\n            <div className=\"\" />\n        </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\nreturn bindActionCreators(\n    {cardActive: cardActive},\n    dispatch\n)\n}\n \n\nexport default connect(null,mapDispatchToProps)(Marker);","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Marker from '../components/marker';\nimport {connect} from 'react-redux';\n\nclass Map extends Component {\n    static defaultProps = {\n        center: {\n          lat: 46.22,\n          lng: 2.21\n        },\n        zoom: 5\n      };\n\n      \n \n\n    render(){\n      if (Array.isArray(this.props.cards)) {\n        return( \n            <div   className=\" bg-gray-900 h-full\" >\n                <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyBbjMtABvfaw7Cq_un0llwAg8derao9yUk\" }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          \n          {this.props.cards.map(card => <Marker\n            key={card._id}\n            lat={card.lat}\n            lng={card.lng}\n            card={card}\n            name=\"My Marker\"\n            color=\"red\"\n          />)}\n            \n            </GoogleMapReact>\n            </div>\n        );\n      } else {\n\n        return( \n          <div   className=\" bg-gray-900 h-full\" >\n              <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyBbjMtABvfaw7Cq_un0llwAg8derao9yUk\" }}\n        defaultCenter={this.props.center}\n        defaultZoom={this.props.zoom}\n      >\n        \n        <Marker\n          lat={this.props.cards.lat}\n          lng={this.props.cards.lng}\n          card={this.props.cards}\n          name=\"My Marker\"\n          color=\"red\"\n        />\n          \n          </GoogleMapReact>\n          </div>\n      );\n      }\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cards: state.cards\n  }\n}\n\nexport default connect(mapStateToProps)(Map);","import React, { Component } from 'react';\nvar FA = require('react-fontawesome')\n\nclass Event extends Component {\n\n    render(){\n        return(\n            <div className=\"block bg-gray-400 w-64 h-64 text-center\">\n                <FA name=\"calendar\" className='text-6xl mt-10 opacity-25'/>\n                <p className=\"p-10 text-gray-700\">Connectez vous pour voir vos evenement</p>\n            </div>\n        );\n    }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { cardActive } from '../actions'\n\nclass Card extends Component {\n    \n\n    onClick = () => {\n        this.props.cardActive(this.props.card)\n    }\n\n\n    render(){\n        const style = {backgroundImage: `url(${this.props.img})`}\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        const start = `${new Date(this.props.start).toLocaleDateString('fr',options)}`;\n        const starttimes = `${new Date(this.props.start).toLocaleTimeString('fr',{ hour: '2-digit', minute: '2-digit' })}`;\n        const stop = `${new Date(this.props.stop).toLocaleTimeString('fr',{ hour: '2-digit', minute: '2-digit' })}`;\n        return(\n            <div onClick={this.onClick}  className=\"cursor-pointer flex border-solid border-b border-gray-600\" >\n                <div className=\"w-24 h-24 bg-gray-700 bg-cover bg-center\" style={style}></div>\n                <div className=\"p-2 flex justify-between w-full\">\n                    <div className=\"flex flex-col justify-between h-full\">\n                        <p className=\"text-sm font-bold\">{this.props.name}</p>\n                        <p className=\"text-sm\">{start} de {starttimes} à {stop} </p>\n                    </div>\n                    <div className=\"flex flex-col justify-between h-full items-end\">\n                        <p className=\"text-sm\">{this.props.city}</p>\n                        <p className=\"text-xs\">{this.props.place}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {cardActive: cardActive},\n        dispatch\n    )\n}\n     \n    \nexport default connect(null,mapDispatchToProps)(Card);\n","import React, { Component } from 'react';\nimport Card from './card'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { cardSet } from '../actions'\n\nclass CardList extends Component {\n\n    componentDidMount() {\n        this.props.cardSet()\n    }\n\n    render() {\n\n        if(Array.isArray(this.props.cards)) {\n\n            return (\n                <div className=\"cardlist w-full bg-gray-400 flex-grow overflow-y-scroll h-64\" id=\"scroll\">\n                    {this.props.cards.map(card => <Card key={card._id}\n                    name={card.name}\n                    img={card.association.img_url}\n                    start={card.start}\n                    stop={card.stop}\n                    city={card.locationCity}\n                    place={card.location}\n                    card={card} />)}\n                </div>            \n            );\n        } else {\n            return (\n                <div className=\"cardlist w-full bg-gray-400 flex-grow overflow-y-scroll h-64 lg:h-128\" id=\"scroll\">\n                 <p>coucou</p>\n                </div>            \n            );\n        }\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {cardSet: cardSet},\n        dispatch\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        cards: state.cards\n    };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CardList);","import React, { Component } from 'react';\n\nimport Map from '../containers/map';\nimport Event from '../containers/event'\nimport CardList from '../containers/card-list';\n\nclass Body extends Component {\n\n    render(){\n        return(\n            <div className=\" mt-20 mx-8 flex justify-between\">\n                <div className=\"hidden md:block\">\n                    <Event />\n                    <div className=\"actu mt-10 w-64 h-64\">\n                    </div>\n                </div>\n                <div className=\"body flex-grow md:ml-10 flex flex-col lg:flex-row\">\n                    <CardList />\n                    <div className=\"w-full mt-10 h-64 lg:mt-0 lg:ml-10 lg:h-full\">\n                        <Map />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Body;","import React, { Component } from 'react';\n\n//import Component\nimport Header from '../containers/header';\nimport NavBar from '../components/navbar';\nimport Body from '../components/body';\n\nclass HomePage extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <NavBar />\n                <div >\n                    <Body />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { inscription } from '../actions';\n\n\nclass FormInscription extends Component {\n\n    onSubmit = (values) => {\n        this.props.inscription(values, (post) => {\n            this.props.history.push('/home'); // Navigate after submit\n            return post;\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <img className=\"mx-auto pt-5\" src={logo_home} alt=\"logo HeartShare\" height='400' width='400'/>\n                <div className='mt- mx-auto p-5 bg-red-600 w-1/2 max-w-screen-md rounded-lg '>\n                    <p className=\"text-xl font-bold  text-center\">Inscription</p>\n                    <div className=\" w-3/4 max-w-lg mx-auto\">\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\" px-8 pt-6 pb-8 mb-4\">\n                            <div className=\"mb-4\">\n                            <label className=\"block  text-sm font-bold mb-2\" htmlFor=\"email\" >\n                                Email\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"email\"\n                            name=\"email\"\n                            component=\"input\"\n                            />\n                            </div>\n                            <div className=\"mb-6\">\n                            <label className=\"block  text-sm font-bold mb-2\" >\n                                Password\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            component=\"input\"\n                            placeholder=\"******************\"\n                            />\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                            <button className=\"bg-white hover:bg-red-200 text-red-600 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"   type=\"submit\"\n                            disabled={this.props.pristine || this.props.submitting}>\n                                Inscription\n                            </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({ form: 'inscription' })(\n    connect(null, { inscription })(FormInscription)\n    );\n","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { connexion } from '../actions';\n\nclass FormConnect extends Component {\n\n\n    onSubmit = (values) => {\n        this.props.connexion(values, (post) => {\n            this.props.history.push('/home'); // Navigate after submit\n            return post;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <img className=\"mx-auto pt-5\" src={logo_home} alt=\"logo HeartShare\" height='400' width='400'/>\n                <div className='mt- mx-auto p-5 bg-red-600 w-1/2 max-w-screen-md rounded-lg '>\n                    <p className=\"text-xl font-bold  text-center\">Connexion</p>\n                    <div className=\" w-3/4 max-w-lg mx-auto\">\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\" px-8 pt-6 pb-8 mb-4\">\n                            <div className=\"mb-4\">\n                            <label className=\"block  text-sm font-bold mb-2\" htmlFor=\"email\" >\n                                Email\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"email\"\n                            name=\"email\"\n                            component=\"input\"\n                            />\n                            </div>\n                            <div className=\"mb-6\">\n                            <label className=\"block  text-sm font-bold mb-2\" >\n                                Password\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            component=\"input\"\n                            placeholder=\"******************\"\n                            />\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                            <button className=\"bg-white hover:bg-red-200 text-red-600 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"   type=\"submit\"\n                            disabled={this.props.pristine || this.props.submitting}>\n                                Connexion\n                            </button>\n                            <a className=\"ml-5 inline-block align-baseline font-bold text-sm text-white hover:text-red-200\" href=\"/home\">\n                                Forgot Password?\n                            </a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({ form: 'connexion' })(\n    connect(null, { connexion })(FormConnect)\n    );","const userReducer = (state = null, action) => {\n\n    \n    switch (action.type) {\n        case 'USER_SET':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default userReducer","const cardReducer = (state = [], action) => {\n\n    \n    switch (action.type) {\n        case 'CARD_SET':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default cardReducer","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore,combineReducers,applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger'\nimport reduxPromise from 'redux-promise';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createHistory as history } from 'history';\n\n\n//import style\nimport './assets/stylesheets/application.scss';\n\n//import component\nimport Home from './components/home'\nimport HomePage from './components/home-page'\nimport FormInscription from './containers/form-inscription'\nimport FormConnect from './containers/form-connect'\n\n\n//import reducer\nimport { reducer as formReducer } from 'redux-form';\nimport userReducer from './reducers/user'\nimport cardReducer from './reducers/card'\n\nconst reducers = combineReducers({\n  form: formReducer,\n  user: userReducer,\n  cards: cardReducer\n});\n\n\nconst middleware = applyMiddleware(reduxPromise, logger);\n\n\nReactDOM.render(\n  <Provider store={createStore(reducers, {}, middleware)} >\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/home\" exact component={HomePage} />\n        <Route path=\"/connexion\" exact component={FormConnect} />\n        <Route path=\"/inscription\" exact component={FormInscription} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}