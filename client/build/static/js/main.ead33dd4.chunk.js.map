{"version":3,"sources":["assets/images/logo_home.svg","serviceWorker.js","components/home.jsx","actions/index.js","containers/profile-menu.jsx","containers/profile.jsx","containers/header.jsx","containers/nav-choice.jsx","components/navbar.jsx","components/marker.jsx","containers/map.jsx","containers/event.jsx","containers/card.jsx","containers/card-list.jsx","components/body.jsx","components/home-page.jsx","containers/form-inscription.jsx","containers/form-connect.jsx","reducers/user.js","reducers/card.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","src","logo_home","alt","height","width","aria-label","role","Component","isLog","type","payload","fetch","method","headers","localStorage","getItem","then","response","json","cardSet","reponse","catch","err","cardActive","card","setNear","position","request","body","JSON","stringify","console","log","ProfileMenu","this","props","user","userId","to","connect","state","dispatch","bindActionCreators","Profile","handleClick","active","setState","onClick","style","backgroundImage","Header","change","placeholder","id","options","appId","apiKey","language","countries","onChange","query","rawAnswer","suggestion","suggestionIndex","latlng","onSuggestions","suggestions","onCursorChanged","suggestonIndex","onClear","onLimit","message","onError","NavChoice","geoFindMe","navigator","geolocation","getCurrentPosition","coo","lat","coords","latitude","lng","longitude","name","NavBar","Marker","backgroundColor","color","cursor","title","Map","Array","isArray","cards","bootstrapURLKeys","key","defaultCenter","center","zoom","map","_id","defaultProps","FA","require","Event","Card","img","start","Date","toLocaleDateString","weekday","year","month","day","starttimes","toLocaleTimeString","hour","minute","stop","city","place","CardList","association","img_url","locationCity","description","Body","HomePage","FormInscription","onSubmit","values","inscription","post","history","push","handleSubmit","htmlFor","Field","label","component","disabled","pristine","submitting","reduxForm","form","callback","data","setItem","token","FormConnect","connexion","href","userReducer","action","cardReducer","reducers","combineReducers","formReducer","middleware","applyMiddleware","reduxPromise","logger","ReactDOM","render","store","createStore","path","exact","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ead33dd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_home.ffb43085.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className='home h-screen' >\n                <div>\n                    <img className=\"mx-auto pt-40\" src={logo_home} alt=\"logo HeartShare\" height='400' width='400'/>\n                    <div>\n                        <h2 className='text-2xl text-center mt-20 font-bold'>See you soon <span aria-label=\"emoji-heart\" role=\"img\">😍</span></h2>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","export function inscription(body, callback) {\n    fetch(`/api/auth/signup`, {\n        method:'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n        }).then(response => response.json())\n        .then(data => {localStorage.setItem('token', data.token)})\n        .then(callback);\n\n        \n    return {\n    type: 'USER_SET', // Not used by reducer (we navigate)\n    payload: localStorage.getItem('token')\n    };\n}\n\nexport function connexion(body, callback) {\n    fetch(`/api/auth/login`, {\n        method:'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n        }).then(response => response.json())\n        .then(data => {localStorage.setItem('token', data.token)})\n        .then(callback);\n\n    return {\n    type: 'USER_SET', // Not used by reducer (we navigate)\n    payload: localStorage.getItem('token')\n    };\n}\n\nexport const isLog =  () => {\n    const request = fetch(`/api/auth/islog`, {\n        method:'GET',\n        headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`}\n        }).then(response => response.json());\n\n        \n        return {\n            type: 'USER_SET', // Not used by reducer (we navigate)\n            payload: request\n            };\n}\n\nexport const cardSet = () => {\n    const request = fetch('/api/event/index', {\n        method: 'GET',\n        headers: {\"Content-Type\": \"application/json\"}\n    }).then(reponse => reponse.json())\n    .catch(err => err.json())\n\n    return {\n        type: 'CARD_SET',\n        payload: request\n    };\n}\n\nexport const cardActive = (card) => {\n    return {\n        type: 'CARD_SET',\n        payload: card\n    };\n}\n\nexport const setNear = (position) => {\n    const request = fetch('/api/event/near', {\n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify(position)\n    }).then(reponse => reponse.json())\n    .catch(err => err.json)\n    console.log(position)\n    return {\n        type: 'CARD_SET',\n        payload:request\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { isLog } from \"../actions\";\n\n\nclass ProfileMenu extends Component {\n\n    componentWillMount() {\n        this.props.isLog()\n    }\n\n\n    render() {\n        if (this.props.user === null || this.props.user.userId === null){\n        return (\n            <div className=\"profilemenu absolute bg-gray-400\">\n                <Link to=\"/connexion\">\n                    <div className=\"p-5 border\">\n                        <p className=\"block profile text-center\">Connexion</p>\n                    </div>\n                </Link>\n                <Link to=\"/inscription\">\n                    <div className=\"p-5 border\">\n                        <p className=\"block profile text-center\" >Inscription</p>\n                    </div>\n                </Link>\n            </div>\n        );\n        } else {\n            console.log(this.props.user)\n            return(\n                <div> coucou</div>\n            );\n        }\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {isLog: isLog},\n        dispatch\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfileMenu);","import React, { Component } from 'react';\nimport ProfileMenu from './profile-menu';\n\n\nclass Profile extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            active: false\n        }\n    }\n    \n    handleClick = () => {\n        if (this.state.active === false){\n            this.setState({active: true})\n        } else {\n            this.setState({active: false})            \n        }\n    }\n\n    render(){\n        const style = {backgroundImage: `url(https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png)`}\n        return(\n            <div className=\"relative\">\n                <div onClick={this.handleClick} className=\"profile h-16 w-16 bg-gray-400 rounded-full bg-cover bg-bottom \" style={style}></div>\n                {this.state.active === true ? <ProfileMenu /> : \"\"}\n            </div>\n        );\n    }\n}\n\n\nexport default Profile;","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\nimport Profile from './profile'\nimport AlgoliaPlaces from 'algolia-places-react';\nimport { setNear } from '../actions'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport '../assets/stylesheets/search.css'\n\nclass Header extends Component {\n\n    change = () => {\n        if (this.style === \"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"){\n            this.style = \"search shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        } else {\n          this.style = \"search shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        }\n    }\n\n    onClick = (position) => {\n      this.props.setNear(position);\n  }\n\n    style = \"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n\n    render(){\n        return(\n            <div className=\"py-5 px-10 flex justify-between items-center\">\n                <img src={logo_home} alt=\"logo HeartShare\" height='150' width='150'/>\n                    <AlgoliaPlaces\n      placeholder='Rechercher par villes'\n      className={this.style}\n      id=\"address-input\" type=\"search\"\n      options={{\n        appId: 'plU5Y3A0QOV9',\n        apiKey: 'b279fc45a0ef9b6d77da799f3dc3ed7f',\n        language: 'fr',\n        countries: ['fr'],\n        type: 'city',\n        // Other options from https://community.algolia.com/places/documentation.html#options\n      }}\n\n      \n\n\n      onChange={({ query, rawAnswer, suggestion, suggestionIndex }) => \n        this.onClick(suggestion.latlng)}\n \n      onSuggestions={({ rawAnswer, query, suggestions }) => \n        console.log('Fired when dropdown receives suggestions. You will receive the array of suggestions that are displayed.')}\n \n      onCursorChanged={({ rawAnswer, query, suggestion, suggestonIndex }) => \n        console.log('Fired when arrows keys are used to navigate suggestions.')}\n \n      onClear={() => \n        console.log('Fired when the input is cleared.')}\n \n      onLimit={({ message }) => \n        console.log('Fired when you reached your current rate limit.')}\n \n      onError={({ message }) => \n        console.log('Fired when we could not make the request to Algolia Places servers for any reason but reaching your rate limit.')}\n    />\n                <Profile />\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {setNear: setNear},\n    dispatch\n  )\n}\n\nexport default connect(null, mapDispatchToProps)(Header);","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setNear,cardSet } from '../actions'\n\nclass NavChoice extends Component {\n\n    componentDidMount(){\n        this.geoFindMe();\n    }\n\n\n    position = {}\n\n    geoFindMe = () => {      \n\n        const success = (position) => {\n            const latitude  = position.coords.latitude;\n            const longitude = position.coords.longitude;\n\n            const coo = {lat: latitude, lng: longitude}\n            this.position =  coo\n        }\n        \n        const error = () => {\n            return null\n        }\n        \n        navigator.geolocation.getCurrentPosition(success, error)\n        \n    }\n\n    onClick = () => {\n        if (this.props.name === \"Près de chez vous\"){\n            this.props.setNear(this.position);\n        } else if (this.props.name === \"Tout les évenement\"){\n            this.props.cardSet();\n        }\n    }\n\n\n\n    render(){\n        return(\n            <div onClick={this.onClick} className=\"cursor-pointer choice py-2 w-1/4 bg-gray-300 rounded-md text-center\">\n                <p className=\"font-bold\">{this.props.name}</p>\n            </div>\n        );\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            setNear: setNear,\n            cardSet: cardSet\n        },\n        dispatch\n    )\n}\n\n\n\nexport default connect(null, mapDispatchToProps)(NavChoice);","import React, { Component } from 'react';\nimport NavChoice from '../containers/nav-choice';\n\nclass NavBar extends Component {\n\n    render(){\n        return(\n            <div className=\"flex justify-between mx-8 \">\n                <NavChoice name=\"Près de chez vous\"/>\n                <NavChoice name=\"Category\"/>\n                <NavChoice name=\"Tout les évenement\"/>\n            </div>\n        );\n    }\n\n}\n\nexport default NavBar;","\nimport React,{ Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { cardActive } from '../actions'\nimport '../assets/stylesheets/marker.css';\n\nclass Marker extends Component {\n\n    onClick = () => {\n        this.props.cardActive(this.props.card)\n    }\n\n    render(){\n        return (\n        <div>\n            <div\n            onClick={this.onClick}\n            className=\"pin bounce\"\n            style={{ backgroundColor: this.props.color, cursor: 'pointer' }}\n            title={this.props.name}\n            />\n            <div className=\"\" />\n        </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\nreturn bindActionCreators(\n    {cardActive: cardActive},\n    dispatch\n)\n}\n \n\nexport default connect(null,mapDispatchToProps)(Marker);","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Marker from '../components/marker';\nimport {connect} from 'react-redux';\n\nclass Map extends Component {\n    static defaultProps = {\n        center: {\n          lat: 46.22,\n          lng: 2.21\n        },\n        zoom: 5\n      };\n\n      \n \n\n    render(){\n      if (Array.isArray(this.props.cards)) {\n        return( \n            <div   className=\" bg-gray-900 h-full\" >\n                <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyBbjMtABvfaw7Cq_un0llwAg8derao9yUk\" }}\n          defaultCenter={this.props.center}\n          zoom={this.props.zoom}\n        >\n          \n          {this.props.cards.map(card => <Marker\n            key={card._id}\n            lat={card.lat}\n            lng={card.lng}\n            card={card}\n            name={card.name}\n            color=\"red\"\n          />)}\n            \n            </GoogleMapReact>\n            </div>\n        );\n      } else {\n\n        return( \n          <div   className=\" bg-gray-900 h-full\" >\n              <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyBbjMtABvfaw7Cq_un0llwAg8derao9yUk\" }}\n        center={{\n          lat: this.props.cards.lat,\n          lng: this.props.cards.lng\n        }}\n        zoom={15}\n      >\n        \n        <Marker\n          lat={this.props.cards.lat}\n          lng={this.props.cards.lng}\n          card={this.props.cards}\n          name={this.props.cards.name}\n          color=\"red\"\n        />\n          \n          </GoogleMapReact>\n          </div>\n      );\n      }\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cards: state.cards\n  }\n}\n\nexport default connect(mapStateToProps)(Map);","import React, { Component } from 'react';\nvar FA = require('react-fontawesome')\n\nclass Event extends Component {\n\n    render(){\n        return(\n            <div className=\"block bg-gray-400 w-64 h-64 text-center\">\n                <FA name=\"calendar\" className='text-6xl mt-10 opacity-25'/>\n                <p className=\"p-10 text-gray-700\">Connectez vous pour voir vos evenement</p>\n            </div>\n        );\n    }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { cardActive } from '../actions'\n\nclass Card extends Component {\n    \n\n    \n\n\n    render(){\n        const style = {backgroundImage: `url(${this.props.img})`}\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        const start = `${new Date(this.props.start).toLocaleDateString('fr',options)}`;\n        const starttimes = `${new Date(this.props.start).toLocaleTimeString('fr',{ hour: '2-digit', minute: '2-digit' })}`;\n        const stop = `${new Date(this.props.stop).toLocaleTimeString('fr',{ hour: '2-digit', minute: '2-digit' })}`;\n        return(\n            <div onClick={this.onClick}  className=\"cursor-pointer flex border-solid border-b border-gray-600\" >\n                <div className=\"w-24 h-24 bg-gray-700 bg-cover bg-center\" style={style}></div>\n                <div className=\"p-2 flex justify-between w-full\">\n                    <div className=\"flex flex-col justify-between h-full\">\n                        <p className=\"text-sm font-bold\">{this.props.name}</p>\n                        <p className=\"text-sm\">{start} de {starttimes} à {stop} </p>\n                    </div>\n                    <div className=\"flex flex-col justify-between h-full items-end\">\n                        <p className=\"text-sm\">{this.props.city}</p>\n                        <p className=\"text-xs\">{this.props.place}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {cardActive: cardActive},\n        dispatch\n    )\n}\n     \n    \nexport default connect(null,mapDispatchToProps)(Card);\n","import React, { Component } from 'react';\nimport Card from './card'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { cardSet } from '../actions'\n\nclass CardList extends Component {\n\n    componentDidMount() {\n        this.props.cardSet()\n    } \n\n    render() {\n\n        if(Array.isArray(this.props.cards)) {\n\n            return (\n                <div className=\"cardlist w-full bg-gray-200 flex-grow overflow-y-scroll h-64\" id=\"scroll\">\n                    {this.props.cards.map(card => <Card key={card._id}\n                    name={card.name}\n                    img={card.association.img_url}\n                    start={card.start}\n                    stop={card.stop}\n                    city={card.locationCity}\n                    place={card.location}\n                    card={card} />)}\n                </div>            \n            );\n        } else {\n            const style = {backgroundImage: `url(${this.props.cards.association.img_url})`}\n            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n            const start = `${new Date(this.props.cards.start).toLocaleDateString('fr',options)}`;\n            const starttimes = `${new Date(this.props.cards.start).toLocaleTimeString('fr',{ hour: '2-digit', minute: '2-digit' })}`;\n            const stop = `${new Date(this.props.cards.stop).toLocaleTimeString('fr',{ hour: '2-digit', minute: '2-digit' })}`;\n            return (\n                <div className=\"flex flex-col justify-between cardlist w-full bg-gray-400 flex-grow overflow-y-scroll h-64 lg:h-128 lg:p-10\" id=\"scroll\">\n                    <h3 className=\"text-lg font-bold text-center \">Evenement</h3>\n                    <div className=\"px-5 flex justify-between lg:mt-10\">\n                        <div>\n                            <p className=\"text-md font-bold\">{this.props.cards.name}</p>\n                            <p className=\"text-sm\">{start} de {starttimes} à {stop} </p>\n                        </div>\n                        <div>\n                            <p>{this.props.cards.location}</p>\n                            <p>{this.props.cards.locationCity}</p>\n                        </div>\n                    </div>\n                    <div className=\"flex lg:flex-grow lg:flex-col lg:items-center lg:justify-around \">\n                        <div className=\"w-32 h-32 bg-gray-700 bg-cover bg-center lg:mt-5\" style={style} ></div>\n                        <div className=\"w-full text-center \">\n                            <h3 className=\"text-sm font-bold lg:text-lg\">{this.props.cards.association.name}</h3>\n                            <p className=\"text-sm lg:text-md lg:mt-10\" >{this.props.cards.association.description}</p>\n                        </div>\n                    </div>\n                </div>            \n            );\n        }\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {cardSet: cardSet},\n        dispatch\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        cards: state.cards\n    };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CardList);","import React, { Component } from 'react';\n\nimport Map from '../containers/map';\nimport Event from '../containers/event'\nimport CardList from '../containers/card-list';\n\nclass Body extends Component {\n\n    render(){\n        return(\n            <div className=\" mt-20 mx-8 flex justify-between\">\n                <div className=\"hidden md:block\">\n                    <Event />\n                    <div className=\"actu mt-10 w-64 h-64\">\n                    </div>\n                </div>\n                <div className=\"body flex-grow md:ml-10 flex flex-col lg:flex-row\">\n                    <CardList />\n                    <div className=\"w-full mt-10 h-64 lg:mt-0 lg:ml-10 lg:h-full\">\n                        <Map />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Body;","import React, { Component } from 'react';\n\n//import Component\nimport Header from '../containers/header';\nimport NavBar from '../components/navbar';\nimport Body from '../components/body';\n\nclass HomePage extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <NavBar />\n                <div >\n                    <Body />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { inscription } from '../actions';\n\n\nclass FormInscription extends Component {\n\n    onSubmit = (values) => {\n        this.props.inscription(values, (post) => {\n            this.props.history.push('/home'); // Navigate after submit\n            return post;\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <img className=\"mx-auto pt-5\" src={logo_home} alt=\"logo HeartShare\" height='400' width='400'/>\n                <div className='mt- mx-auto p-5 bg-red-600 w-1/2 max-w-screen-md rounded-lg '>\n                    <p className=\"text-xl font-bold  text-center\">Inscription</p>\n                    <div className=\" w-3/4 max-w-lg mx-auto\">\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\" px-8 pt-6 pb-8 mb-4\">\n                            <div className=\"mb-4\">\n                            <label className=\"block  text-sm font-bold mb-2\" htmlFor=\"email\" >\n                                Email\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"email\"\n                            name=\"email\"\n                            component=\"input\"\n                            />\n                            </div>\n                            <div className=\"mb-6\">\n                            <label className=\"block  text-sm font-bold mb-2\" >\n                                Password\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            component=\"input\"\n                            placeholder=\"******************\"\n                            />\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                            <button className=\"bg-white hover:bg-red-200 text-red-600 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"   type=\"submit\"\n                            disabled={this.props.pristine || this.props.submitting}>\n                                Inscription\n                            </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({ form: 'inscription' })(\n    connect(null, { inscription })(FormInscription)\n    );\n","import React, { Component } from 'react';\nimport logo_home from '../assets/images/logo_home.svg'\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { connexion } from '../actions';\n\nclass FormConnect extends Component {\n\n\n    onSubmit = (values) => {\n        this.props.connexion(values, (post) => {\n            this.props.history.push('/home'); // Navigate after submit\n            return post;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <img className=\"mx-auto pt-5\" src={logo_home} alt=\"logo HeartShare\" height='400' width='400'/>\n                <div className='mt- mx-auto p-5 bg-red-600 w-1/2 max-w-screen-md rounded-lg '>\n                    <p className=\"text-xl font-bold  text-center\">Connexion</p>\n                    <div className=\" w-3/4 max-w-lg mx-auto\">\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\" px-8 pt-6 pb-8 mb-4\">\n                            <div className=\"mb-4\">\n                            <label className=\"block  text-sm font-bold mb-2\" htmlFor=\"email\" >\n                                Email\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"email\"\n                            name=\"email\"\n                            component=\"input\"\n                            />\n                            </div>\n                            <div className=\"mb-6\">\n                            <label className=\"block  text-sm font-bold mb-2\" >\n                                Password\n                            </label>\n                            <Field\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            label=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            component=\"input\"\n                            placeholder=\"******************\"\n                            />\n                            </div>\n                            <div className=\"flex items-center justify-between\">\n                            <button className=\"bg-white hover:bg-red-200 text-red-600 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"   type=\"submit\"\n                            disabled={this.props.pristine || this.props.submitting}>\n                                Connexion\n                            </button>\n                            <a className=\"ml-5 inline-block align-baseline font-bold text-sm text-white hover:text-red-200\" href=\"/home\">\n                                Forgot Password?\n                            </a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default reduxForm({ form: 'connexion' })(\n    connect(null, { connexion })(FormConnect)\n    );","const userReducer = (state = null, action) => {\n\n    \n    switch (action.type) {\n        case 'USER_SET':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default userReducer","const cardReducer = (state = [], action) => {\n\n    \n    switch (action.type) {\n        case 'CARD_SET':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default cardReducer","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore,combineReducers,applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger'\nimport reduxPromise from 'redux-promise';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createHistory as history } from 'history';\n\n\n//import style\nimport './assets/stylesheets/application.scss';\n\n//import component\nimport Home from './components/home'\nimport HomePage from './components/home-page'\nimport FormInscription from './containers/form-inscription'\nimport FormConnect from './containers/form-connect'\n\n\n//import reducer\nimport { reducer as formReducer } from 'redux-form';\nimport userReducer from './reducers/user'\nimport cardReducer from './reducers/card'\n\nconst reducers = combineReducers({\n  form: formReducer,\n  user: userReducer,\n  cards: cardReducer\n});\n\n\nconst middleware = applyMiddleware(reduxPromise, logger);\n\n\nReactDOM.render(\n  <Provider store={createStore(reducers, {}, middleware)} >\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/home\" exact component={HomePage} />\n        <Route path=\"/connexion\" exact component={FormConnect} />\n        <Route path=\"/inscription\" exact component={FormInscription} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}